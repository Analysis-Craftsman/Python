# -*- coding: utf-8 -*-
"""변수 신뢰성 분석

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X2iG9HOjpehrZf1chKGXxdvqqlN5YgM-
"""

# 예측분석이나 시나리오 분석을 위한 변수들의 신뢰성 분석

# 예측식 : 노출 + 클릭 = ROAS
# 예측식 : 노출 + 클릭 + 도달 = ROAS

from google.colab import drive
drive.mount('/content/gdrive')

import pandas as pd 

df = pd.read_csv("/content/gdrive/My Drive/Colab Notebooks/STAR/005 - 변수 신뢰성 분석/train.csv", sep=",", encoding="unicode_escape")
df

# 데이터 프레임으로 내용 확인하기
df.describe()

# 기존 데이터 프레임 상관관계 확인하기

import seaborn as sns
sns.clustermap(df.corr(), annot = True)

# 필요없어보이는 컬럼 결합하여 상관관계 다시 확인하기

from sklearn.cluster import KMeans # model

model = KMeans(n_clusters=3, random_state=10, algorithm='auto')
model.fit(df[[ 'id', 'week', 'center_id', 'meal_id' ]])

pred = model.predict(df[[  'id', 'week', 'center_id', 'meal_id'  ]])

import numpy as np
print( np.unique(pred) )

df['id & week cluster nums'] = pred

new_df = df.copy()
new_df = df[[ 'checkout_price', 'base_price', 'emailer_for_promotion', 'homepage_featured', 'id & week cluster nums',  'num_orders' ]]

new_df

import seaborn as sns
sns.clustermap(new_df.corr(), annot = True)

# 상관관계가 좋아질 기미가 안보이네.

pip install pingouin

# 상관관계 없이, 예측식의 신뢰성 분석을 실행하자.
# 신뢰성을 분석하는데 있어서 사용하는 공식은 크론바흐 알파라는 값이다.

import pingouin as pg

# 0.002 %
print( "기존 데이터셋 : {}".format( pg.cronbach_alpha(data = df[[ 'id', 'week', 'center_id', 'meal_id', 'checkout_price', 'base_price', 'emailer_for_promotion', 'homepage_featured', 'id & week cluster nums' ]])[0] ))

# 61 %
print( "변경된 데이터셋 : {} ".format(pg.cronbach_alpha(data = new_df[[ 'checkout_price', 'base_price', 'emailer_for_promotion', 'homepage_featured', 'id & week cluster nums' ]])[0] ))

# 유의사항 : 크론바흐 알파계수 0.6 이상은 신뢰성이 있다. 0.8 이상은 높다라고 볼 수 있으며, 최소 3개 이상의 항목이 포함되어야 한다.

# 데이터셋 구조조정만으로 신뢰성이 있는 데이터세트를 생성하였다. 무려, 0.002% -> 61% !
# 올바른 셋을 구했고, 충분히 식을 세워도 된다는 통계적인 수치를 확인. 이제부터 예측하면 되겠죠?